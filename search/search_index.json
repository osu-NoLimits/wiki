{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Installation","text":"<p>This is the guide to install and configure Shiina-Web and bancho.py-ex</p> <p></p>"},{"location":"#post-setup","title":"Post setup","text":"<p>Create following subdomains and make them point to your server, adding Cloudflare to your domain is recommended cause of the Proxy that protects your IP.</p> <p></p> <p>Do not forget the main domain <code>(example: osunolimits.dev)</code> which can be added with an <code>@</code> in Cloudflare. isn't listed in image</p> <p>You can choose if you use flexible or strict SSL Encryption but you will need a certificate to connect to the server. A good tutotial is here bancho.py wiki</p> <p><code>NOTE: It is recommended for the next step to create a fork with GitHub to get updates.</code></p>"},{"location":"#installing-banchopy-ex","title":"Installing bancho.py-ex","text":""},{"location":"#installing-docker","title":"Installing docker","text":"Ubuntu <ol> <li>Remove conflicting packages <pre><code>for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done\n</code></pre></li> <li>Install repository to apt <pre><code>sudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho \\\n\"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\n$(. /etc/os-release &amp;&amp; echo \"${UBUNTU_CODENAME:-$VERSION_CODENAME}\") stable\" | \\\nsudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\n</code></pre></li> <li>Install latest <pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre></li> </ol> Debian <ol> <li>Remove conflicting packages <pre><code>for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done\n</code></pre></li> <li>Install repository to apt <pre><code># Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho \\\n\"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \\\n$(. /etc/os-release &amp;&amp; echo \"$VERSION_CODENAME\") stable\" | \\\nsudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\n</code></pre></li> <li>Install latest <pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre></li> </ol> Fedora <ol> <li>Remove conflicting packages <pre><code>sudo dnf remove docker \\\n              docker-client \\\n              docker-client-latest \\\n              docker-common \\\n              docker-latest \\\n              docker-latest-logrotate \\\n              docker-logrotate \\\n              docker-selinux \\\n              docker-engine-selinux \\\n              docker-engine\n</code></pre></li> <li>Install repository to rpm <pre><code>sudo dnf -y install dnf-plugins-core\nsudo dnf-3 config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo\n</code></pre></li> <li>Install latest <pre><code>sudo dnf install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre></li> <li>Enable Docker Engine <pre><code>sudo systemctl enable --now docker\n</code></pre></li> </ol>"},{"location":"#installing-nginx","title":"Installing nginx","text":"Ubuntu &amp; Debian <ol> <li>Remove Apache2 if installed (Ubuntu) <pre><code>sudo systemctl stop apache2\nsudo apt remove apache2 apache2-utils apache2-bin apache2.2-common\nsudo apt autoremove\n</code></pre></li> <li>Update package list <pre><code>sudo apt update\n</code></pre></li> <li>Install nginx <pre><code>sudo apt install nginx\n</code></pre></li> <li>Check status <pre><code>sudo systemctl status nginx\n</code></pre></li> </ol> Fedora <ol> <li>Update package list <pre><code>sudo dnf update\n</code></pre></li> <li>Install nginx <pre><code>sudo dnf install nginx\n</code></pre></li> <li>Start and enable nginx <pre><code>sudo systemctl start nginx\nsudo systemctl enable nginx\n</code></pre></li> <li>Open firewall ports <pre><code>sudo firewall-cmd --permanent --add-service=http\nsudo firewall-cmd --permanent --add-service=https\nsudo firewall-cmd --reload\n</code></pre></li> <li>Check status <pre><code>sudo systemctl status nginx\n</code></pre></li> </ol>"},{"location":"#first-steps","title":"First steps","text":"<p>Clone the repository (use your own fork if possible) <pre><code>git clone https://github.com/osu-NoLimits/bancho.py-ex.git /home/bancho-py.ex\ncd /home/bancho.py-ex\n</code></pre></p>"},{"location":"#configuring-banchopy-ex","title":"Configuring bancho.py-ex","text":"<p>Copy the configuration files:</p> <ul> <li><code>.env.example</code> -&gt; <code>.env</code></li> <li><code>logging.yaml.example</code> -&gt; <code>logging.yaml</code></li> </ul> <pre><code>cp .env.example .env\ncp logging.yaml.example logging.yaml\n</code></pre> <p>With <code>nano .env</code> you can edit the configuration. </p> <ul> <li>You can get a osu! API Key here</li> </ul> <p>This is the stuff you should change</p> <pre><code># These are important starting the server\nDB_PASS=lol123 #Choose a safe password\nDOMAIN=example.com\nOSU_API_KEY=\n\n# Only needed change when using strict\nSSL_CERT_PATH=/home/user/certs/fullchain.crt\nSSL_KEY_PATH=/home/user/certs/private.key\n\n# Customization\nFIRST_PLACES_WEBHOOK=\nENABLE_FIRST_PLACES_WEBHOOK=True\nDISCORD_URL=https://discord.gg/Xfv4pAKxxa\nSERVER_NAME=osuNoLimits\nDISCORD_AUDIT_LOG_WEBHOOK=\nSEASONAL_BGS=https://i.cmyui.xyz/T74WiQG5wVyf.jpg,https://i.cmyui.xyz/nrMT4V2RR3PR.jpeg\nMENU_ICON_URL=https://akatsuki.pw/static/images/logos/logo_ingame.png\nMENU_ONCLICK_URL=https://akatsuki.pw\n</code></pre> <p>Install nginx configuration <pre><code>./scripts/install-nginx-config.sh\n</code></pre></p> <p>If everything went glad, you are now able to build and start the project</p> <pre><code>make build\nmake run\n</code></pre>"},{"location":"plugins/","title":"Extending shiina","text":""},{"location":"plugins/#starting-plugin-development","title":"Starting plugin development","text":""}]}
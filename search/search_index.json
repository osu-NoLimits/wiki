{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Get VPS Hosting</p> <p>   Get VPS hosting from our recommended provider  (This is an affiliate link \u2013 if you purchase through it, we may earn a commission at no extra cost to you) </p> <p>Welcome to the comprehensive developement guide for osuNoLimits. This guide will help you developing or setting up these applications:</p> <p>Shiina-Web </p> <p>bancho.py-ex </p> <p>Community Support</p> <p>Need help? Join our community on Discord for support and updates. </p>"},{"location":"formatting/","title":"Formatting","text":""},{"location":"formatting/#highlighting","title":"Highlighting","text":"<p>ex:submit</p> <p>This text will appear in a lighter tone.</p> <p>Text can be deleted and replacement text added. This can also be combined into onea single operation. Highlighting is also possible and comments can be added inline.</p> <p>Formatting can also be applied to blocks by putting the opening and closing tags on separate lines and adding new lines between the tags and the content.</p>"},{"location":"formatting/#keys","title":"Keys","text":"<p>Ctrl+Alt+Del</p>"},{"location":"formatting/#no-title-alerts","title":"No Title Alerts","text":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"formatting/#buttons","title":"Buttons","text":"<p>Send </p>"},{"location":"formatting/#tabs","title":"Tabs","text":"CC++ <pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n  printf(\"Hello world!\\n\");\n  return 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\n\nint main(void) {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre>"},{"location":"frontend/","title":"Developing a frontend","text":"<p>Welcome to the comprehensive guide for building frontends that integrate with bancho.py-ex. This guide covers the PubSub system that enables real-time communication between your frontend and the server.</p> <p>What are PubSubs?</p> <p>PubSubs (Publish-Subscribe) are real-time communication channels that allow external applications to interact with the bancho.py-ex server. Each channel either sends data from the server or receives commands from your application.</p> <p>Getting Started</p> <ul> <li> Sends - Server pushes data to your application</li> <li> Receives - Your application sends commands to server</li> <li> All data is transmitted in JSON format</li> </ul>"},{"location":"frontend/#implementation-example","title":"Implementation example","text":"Shiina bancho.py-ex <pre><code>public void onEnable(String, pluginName, Logger logger) {\n    PubSubModels.RankOutput rankOutput = new PubSubModels().new RankOutput();\n    rankOutput.setBeatmap_id(\"1\");\n    rankOutput.setStatus(2); // ranked\n    rankOutput.setFrozen(true);\n\n    long subscribers = App.jedisPool.publish(\"rank\", new Gson().toJson(rankOutput));\n}\n</code></pre> <pre><code>@router.post(\"/web/osu-submit-modular.php\")\nasync def osuSubmitModular(...) -&gt; Response:\n    score = Score.from_submission(score_data[2:])\n    pubsub = app.state.services.redis.pubsub()\n    await pubsub.execute_command(\"PUBLISH\", \"ex:submit\", score.toJSON())\n</code></pre>"},{"location":"frontend/#score-map-management","title":"Score / Map management","text":""},{"location":"frontend/#score-submissions","title":"Score Submissions","text":"<p> <code>ex:submit</code></p> <p>Direction:  Server sends to your application Purpose: Real-time score submissions and statistics</p>  JSON Data Field Reference <pre><code>{\n  \"id\": 219154,\n  \"mode\": 0,\n  \"mods\": 88,\n  \"pp\": 221283.124,\n  \"sr\": 90.73485416518942,\n  \"score\": 88845,\n  \"max_combo\": 3,\n  \"acc\": 2.158273381294964,\n  \"n300\": 3,\n  \"n100\": 0,\n  \"n50\": 0,\n  \"nmiss\": 136,\n  \"ngeki\": 1,\n  \"nkatu\": 0,\n  \"grade\": 1,\n  \"passed\": false,\n  \"perfect\": false,\n  \"status\": 0,\n  \"client_time\": \"2025-02-02T11:10:58\",\n  \"server_time\": \"2025-02-02T11:10:57.000379\",\n  \"time_elapsed\": 54540,\n  \"client_flags\": 0,\n  \"client_checksum\": \"EXAMPLE\",\n  \"rank\": null,\n  \"beatmap_id\": 372245,\n  \"player_id\": 1316\n}\n</code></pre> Field Type Description <code>id</code> <code>int</code> Unique score ID <code>mode</code> <code>int</code> Game mode (0=std, 1=taiko, 2=catch, 3=mania) <code>mods</code> <code>int</code> Mod combination bitwise <code>pp</code> <code>float</code> Performance points <code>sr</code> <code>float</code> Star rating <code>score</code> <code>int</code> Total score <code>max_combo</code> <code>int</code> Maximum combo achieved <code>acc</code> <code>float</code> Accuracy percentage <code>passed</code> <code>bool</code> Whether the map was passed <code>beatmap_id</code> <code>int</code> Beatmap identifier <code>player_id</code> <code>int</code> Player identifier"},{"location":"frontend/#beatmap-status-changes","title":"Beatmap Status Changes","text":"<p> <code>ex:map_status_change</code></p> <p>Direction:  Server sends to your application Purpose: Beatmap ranking status updates</p>  JSON Data Field Reference <pre><code>{\n  \"map_ids\": [4840847, 4888854, 4892923, 4894589, 4918951],\n  \"ranktype\": \"set\",\n  \"type\": \"love\"\n}\n</code></pre> Field Type Description <code>map_ids</code> <code>int[]</code> Array of beatmap IDs affected <code>ranktype</code> <code>string</code> Ranking operation type (<code>set</code>, <code>update</code>) <code>type</code> <code>string</code> New status (<code>love</code>, <code>ranked</code>, <code>approved</code>, <code>pending</code>)"},{"location":"frontend/#beatmap-ranking","title":"Beatmap Ranking","text":"<p> <code>rank</code></p> <p>Direction:  Your application sends to server Purpose: Manually rank/unrank beatmaps</p>  JSON Data Field Reference <pre><code>{\n  \"beatmap_id\": 4870830,\n  \"status\": 2,\n  \"frozen\": true\n}\n</code></pre> Field Type Description <code>beatmap_id</code> <code>int</code> Target beatmap ID <code>status</code> <code>int</code> Ranking status (0=pending, 1=ranked, 2=approved, 3=qualified, 4=loved) <code>frozen</code> <code>bool</code> Whether to freeze the beatmap from further changes"},{"location":"frontend/#user-management","title":"User Management","text":""},{"location":"frontend/#user-restriction","title":"User Restriction","text":"<p> <code>restrict</code></p> <p>Direction:  Your application sends to server Purpose: Restrict user accounts</p>  JSON Data Field Reference <pre><code>{\n  \"id\": 3,\n  \"userId\": 3,\n  \"reason\": \"the owner cheats\"\n}\n</code></pre> Field Type Description <code>id</code> <code>int</code> Target user ID to restrict <code>userId</code> <code>int</code> Admin user ID performing the action <code>reason</code> <code>string</code> Reason for restriction"},{"location":"frontend/#user-unrestriction","title":"User Unrestriction","text":"<p> <code>unrestrict</code></p> <p>Direction:  Your application sends to server Purpose: Unrestrict user accounts</p>  JSON Data Field Reference <pre><code>{\n  \"id\": 3,\n  \"userId\": 3,\n  \"reason\": \"isn't a bad guy\"\n}\n</code></pre> Field Type Description <code>id</code> <code>int</code> Target user ID to unrestrict <code>userId</code> <code>int</code> Admin user ID performing the action <code>reason</code> <code>string</code> Reason for unrestriction"},{"location":"frontend/#user-data-wipe","title":"User Data Wipe","text":"<p> <code>wipe</code></p> <p>Direction:  Your application sends to server Purpose: Wipe user statistics for specific game mode</p>  JSON Data Field Reference <pre><code>{\n  \"id\": 3,\n  \"mode\": 0\n}\n</code></pre> Field Type Description <code>id</code> <code>int</code> Target user ID <code>mode</code> <code>int</code> Game mode to wipe (0=std, 1=taiko, 2=catch, 3=mania)"},{"location":"frontend/#communication","title":"Communication","text":""},{"location":"frontend/#global-announcements","title":"Global Announcements","text":"<p> <code>alert_all</code></p> <p>Direction:  Your application sends to server Purpose: Send announcements to all online users</p>  JSON Data Field Reference <pre><code>{\n  \"message\": \"Server maintenance in 10 minutes!\"\n}\n</code></pre> Field Type Description <code>message</code> <code>string</code> Announcement message to broadcast"},{"location":"frontend/#premium-features","title":"Premium Features","text":""},{"location":"frontend/#supporter-status","title":"Supporter Status","text":"<p> <code>givedonator</code></p> <p>Direction:  Your application sends to server Purpose: Grant supporter/donator status</p>  JSON Data Field Reference <pre><code>{\n  \"id\": 3,\n  \"duration\": \"1w\"\n}\n</code></pre> Field Type Description <code>id</code> <code>int</code> Target user ID <code>duration</code> <code>string</code> Duration (s=seconds, m=minutes, h=hours, d=days, w=weeks)"},{"location":"frontend/#privileges-management","title":"Privileges Management","text":"<p>Available Privileges</p> <p><code>normal</code> \u2022 <code>verified</code> \u2022 <code>whitelisted</code> \u2022 <code>supporter</code> \u2022 <code>premium</code> \u2022 <code>alumni</code> \u2022 <code>tournament</code> \u2022 <code>nominator</code> \u2022 <code>mod</code> \u2022 <code>admin</code> \u2022 <code>developer</code></p>"},{"location":"frontend/#add-privileges","title":"Add Privileges","text":"<p> <code>addpriv</code></p> <p>Direction:  Your application sends to server Purpose: Grant user privileges</p>  JSON Data Field Reference <pre><code>{\n  \"id\": 3,\n  \"privs\": [\"admin\", \"developer\"]\n}\n</code></pre> Field Type Description <code>id</code> <code>int</code> Target user ID <code>privs</code> <code>string[]</code> Array of privileges to add"},{"location":"frontend/#remove-privileges","title":"Remove Privileges","text":"<p> <code>removepriv</code></p> <p>Direction:  Your application sends to server Purpose: Remove user privileges</p>  JSON Data Field Reference <pre><code>{\n  \"id\": 3,\n  \"privs\": [\"admin\", \"developer\"]\n}\n</code></pre> Field Type Description <code>id</code> <code>int</code> Target user ID <code>privs</code> <code>string[]</code> Array of privileges to remove"},{"location":"installation/","title":"Installation","text":"<p>Welcome to the comprehensive installation guide for osuNoLimits. This guide will walk you through setting up Shiina-Web and bancho.py-ex from scratch.</p> <p>Prerequisites</p> <p>Before starting, ensure you have:</p> <ul> <li> A Linux server (Ubuntu 24.04+ recommended)</li> <li> A domain name with DNS access</li> <li> Basic command-line knowledge</li> <li> Approximately 30-60 minutes</li> </ul> <p>Get VPS Hosting</p> <p>   Get VPS hosting from our recommended provider  (This is an affiliate link \u2013 if you purchase through it, we may earn a commission at no extra cost to you) </p>"},{"location":"installation/#domain-configuration","title":"Domain Configuration","text":"<p>Configure the following subdomains to point to your server. We strongly recommend using Cloudflare for DNS management and DDoS protection.</p> <p>Required Subdomains</p> <p>Create these DNS records pointing to your server's IP:</p> A RecordsCloudflare SetupExample Subdomain Purpose Example <code>@</code> Main domain <code>osunolimits.dev</code> <code>osu</code> Game client connection <code>osu.osunolimits.dev</code> <code>c</code> Game server <code>c.osunolimits.dev</code> <code>c4</code> Game server <code>c4.osunolimits.dev</code> <code>a</code> Avatar endpoint <code>a.osunolimits.dev</code> <code>assets</code> Static assets <code>assets.osunolimits.dev</code> <code>api</code> Bancho API <code>api.osunolimits.dev</code> <ol> <li>Add your domain to Cloudflare</li> <li>Update nameservers at your registrar</li> <li>Create the A records listed above</li> <li>Enable proxy (orange cloud) for web traffic protection</li> </ol> <p></p> <p>SSL Configuration</p> <p>You can choose between flexible or strict SSL encryption. For production environments, we recommend Full (Strict) SSL mode with valid certificates.</p> <p>\ud83d\udcd6 Detailed SSL setup guide</p> <p>Version Control Recommendation</p> <p>Create a GitHub fork of the repositories before proceeding. This allows you to:</p> <ul> <li> Easily pull updates</li> <li> Make custom modifications  </li> <li> Maintain your configuration</li> </ul>"},{"location":"installation/#installing-banchopy-ex","title":"Installing bancho.py-ex","text":""},{"location":"installation/#docker-installation","title":"Docker Installation","text":"<p>Docker is required to run bancho.py-ex. Choose your operating system below:</p>  Ubuntu Debian Fedora <p>Cleanup First</p> <p>Remove any conflicting Docker packages:</p> <pre><code>for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do \n    sudo apt-get remove $pkg\ndone\n</code></pre> <p>Step 1: Add Docker's official GPG key and repository <pre><code>sudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n</code></pre></p> <p>Step 2: Add Docker repository to APT sources <pre><code>echo \\\n\"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\n$(. /etc/os-release &amp;&amp; echo \"${UBUNTU_CODENAME:-$VERSION_CODENAME}\") stable\" | \\\nsudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\n</code></pre></p> <p>Step 3: Install Docker <pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre></p> <p>Cleanup First</p> <p>Remove any conflicting Docker packages:</p> <pre><code>for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do \n    sudo apt-get remove $pkg\ndone\n</code></pre> <p>Step 1: Add Docker's official GPG key and repository <pre><code>sudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n</code></pre></p> <p>Step 2: Add Docker repository to APT sources <pre><code>echo \\\n\"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \\\n$(. /etc/os-release &amp;&amp; echo \"$VERSION_CODENAME\") stable\" | \\\nsudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\n</code></pre></p> <p>Step 3: Install Docker <pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre></p> <p>Cleanup First</p> <p>Remove any conflicting Docker packages:</p> <pre><code>sudo dnf remove docker \\\n              docker-client \\\n              docker-client-latest \\\n              docker-common \\\n              docker-latest \\\n              docker-latest-logrotate \\\n              docker-logrotate \\\n              docker-selinux \\\n              docker-engine-selinux \\\n              docker-engine\n</code></pre> <p>Step 2: Add Docker repository <pre><code>sudo dnf -y install dnf-plugins-core\nsudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo\n</code></pre></p> <p>Step 3: Install Docker <pre><code>sudo dnf install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre></p> <p>Step 4: Enable Docker service <pre><code>sudo systemctl enable --now docker\n</code></pre></p>"},{"location":"installation/#nginx-installation","title":"Nginx Installation","text":"<p>Nginx serves as our web server and reverse proxy. Follow the instructions for your operating system:</p>  Ubuntu &amp; Debian Fedora <p>Remove Apache2 (Ubuntu only)</p> <p>If Apache2 is installed, remove it first to avoid conflicts:</p> <pre><code>sudo systemctl stop apache2\nsudo apt remove apache2 apache2-utils apache2-bin apache2.2-common\nsudo apt autoremove\n</code></pre> <p>Step 1: Update package list and install Nginx <pre><code>sudo apt update\nsudo apt install nginx\n</code></pre></p> <p>Step 2: Verify installation <pre><code>sudo systemctl status nginx\n</code></pre></p> <p>Expected Output</p> <p>You should see <code>Active: active (running)</code> in green text.</p> <p>Step 1: Update packages and install Nginx <pre><code>sudo dnf update\nsudo dnf install nginx\n</code></pre></p> <p>Step 2: Start and enable Nginx <pre><code>sudo systemctl start nginx\nsudo systemctl enable nginx\n</code></pre></p> <p>Step 3: Configure firewall <pre><code>sudo firewall-cmd --permanent --add-service=http\nsudo firewall-cmd --permanent --add-service=https\nsudo firewall-cmd --reload\n</code></pre></p> <p>Step 4: Verify installation <pre><code>sudo systemctl status nginx\n</code></pre></p>"},{"location":"installation/#git-installation","title":"Git Installation","text":"<p>Git is required for cloning the repository and managing updates.</p>  Ubuntu &amp; Debian Fedora <p>Step 1: Update package list and install Git <pre><code>sudo apt update\nsudo apt install git\n</code></pre></p> <p>Step 2: Verify installation <pre><code>git --version\n</code></pre></p> <p>Expected Output</p> <p>You should see something like <code>git version 2.34.1</code></p> <p>Step 3: Configure Git (replace with your information) <pre><code>git config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\n</code></pre></p> <p>Step 1: Update packages and install Git <pre><code>sudo dnf update\nsudo dnf install git\n</code></pre></p> <p>Step 2: Verify installation <pre><code>git --version\n</code></pre></p> <p>Expected Output</p> <p>You should see something like <code>git version 2.34.1</code></p> <p>Step 3: Configure Git (replace with your information) <pre><code>git config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\n</code></pre></p>"},{"location":"installation/#repository-setup","title":"Repository Setup","text":"<p>Clone the bancho.py-ex repository to your server:</p> <p>Use Your Fork</p> <p>If you created a fork, replace the URL with your fork's URL for easier updates.</p> <pre><code>git clone https://github.com/osu-NoLimits/bancho.py-ex.git /home/bancho-py-ex\ncd /home/bancho-py-ex\n</code></pre>"},{"location":"installation/#environment-setup","title":"Environment Setup","text":"<p>First, create your configuration files from the provided examples:</p> <pre><code>cp .env.example .env\ncp logging.yaml.example logging.yaml\n</code></pre>"},{"location":"installation/#edit-configuration","title":"Edit Configuration","text":"<p>Open the environment file for editing:</p> <pre><code>nano .env\n</code></pre> <p>Required Configuration</p> <p>You must configure these essential settings before proceeding:</p>  Authentication SSL Settings (Optional) Customization (Optional) Webhooks (Optional) Setting Description Required <code>OSU_API_KEY</code> Get your osu! API key here \u2705 <code>DB_PASS</code> Strong database password \u2705 <code>DOMAIN</code> Your domain (e.g., <code>osunolimits.dev</code>) \u2705 <p>Only required for Full/Strict SSL mode</p> <pre><code>SSL_CERT_PATH=/path/to/your/fullchain.crt\nSSL_KEY_PATH=/path/to/your/private.key\n</code></pre> Setting Description Example <code>SERVER_NAME</code> Your server's display name <code>osuNoLimits</code> <code>DISCORD_URL</code> Your Discord invite link <code>https://discord.gg/yourinvite</code> <code>MENU_ICON_URL</code> In-game menu icon URL to your icon <code>MENU_ONCLICK_URL</code> Click destination Your website URL <code>SEASONAL_BGS</code> Background images Comma-separated URLs <p>Configure Discord webhooks for notifications:</p> <pre><code>FIRST_PLACES_WEBHOOK=https://discord.com/api/webhooks/...\nENABLE_FIRST_PLACES_WEBHOOK=True\nDISCORD_AUDIT_LOG_WEBHOOK=https://discord.com/api/webhooks/...\n</code></pre>"},{"location":"installation/#nginx-configuration","title":"Nginx Configuration","text":"<p>Install the pre-configured nginx setup:</p> <pre><code>./scripts/install-nginx-config.sh\n</code></pre> <p>Configuration Complete</p> <p>Your nginx configuration has been automatically set up with the correct proxy settings for all bancho.py-ex endpoints.</p>"},{"location":"installation/#build-and-start","title":"Build and Start","text":"<p>With everything configured, build and start the project:</p> <pre><code># Build the Docker containers\nmake build\n\n# Start all services\nmake run\n</code></pre> <p>Development vs Production</p> <ul> <li>For development: Use <code>make run</code> for easier debugging</li> <li>For production: Consider using <code>make run-bg</code> or <code>screen -S bancho make run</code> to run in background</li> </ul>"},{"location":"installation/#autoban-configuration","title":"Autoban Configuration","text":"<p>Configure performance point limits to prevent cheating:</p> <pre><code>nano caps.json\n</code></pre> <p>PP Caps Configuration</p> <pre><code>{\n    \"enabled\": true,\n    \"caps\": {\n        \"0\": 800,    // osu! standard\n        \"1\": 1000,   // osu! taiko  \n        \"2\": 900,    // osu! catch\n        \"3\": 850     // osu! mania\n    }\n}\n</code></pre> <p>Important Notes</p> <ul> <li>Set <code>\"enabled\": true</code> to activate automatic banning</li> <li>Adjust PP values based on your server's skill level</li> <li>Monitor logs for any false positives</li> </ul>"},{"location":"installation/#installing-shiina-web","title":"Installing Shiina-Web","text":"<p>bancho.py-ex should be installed at this step</p>"},{"location":"installation/#installing-java","title":"Installing Java","text":"Ubuntu Debian Fedora <pre><code>sudo apt install openjdk-21-jdk -y\n</code></pre> <pre><code>echo \"deb http://deb.debian.org/debian bullseye-backports main\" | sudo tee /etc/apt/sources.list.d/backports.list\nsudo apt update\n\n# Debian 12\nsudo apt install openjdk-21-jdk -y\n\n# Debian 11\nsudo apt install -t bullseye-backports openjdk-21-jdk -y\n</code></pre> <pre><code>sudo dnf install java-21-openjdk-devel -y\n</code></pre>"},{"location":"installation/#repository-setup_1","title":"Repository Setup","text":"<p>Clone the Shiina-Web repository to your server:</p> <p>Use Your Fork</p> <p>If you created a fork, replace the URL with your fork's URL for easier updates.</p> <pre><code>git clone https://github.com/osu-NoLimits/Shiina-Web.git /home/Shiina-Web\ncd /home/Shiina-Web\n</code></pre>"},{"location":"installation/#configuration","title":"Configuration","text":"<pre><code># Navigate to the config directory\ncd .config\n\ncp .env.example .env &amp;&amp; cp customization.yml.example customization.yml &amp;&amp; cp logger.env.example logger.env\n\n# Editing customization.yml is pretty obvious (no tutorial here)\n\nnano .env\n</code></pre> <p>Required Configuration</p> <p>You must configure these essential settings before proceeding:</p>  Main Optional Setting Description Required <code>TURNSTILE_KEY</code> Get Cloudflare Captcha key here \u2705 <code>TURNSTILE_SECRET</code> Get Cloudflare Captcha key here \u2705 <code>DBPASS</code> Your bancho.py-ex DB_PASS \u2705 <code>DOMAIN</code> Your domain (def. <code>https://osunolimits.dev</code>) \u2705 <code>APIURLPUBLIC</code> Your pub api domain (def. <code>https://api.osunolimits.dev</code>) \u2705 <code>ASSETSURL</code> Your pub assets domain (def. <code>https://assets.osunolimits.dev</code>) \u2705 <code>AVATARSRV</code> Your pub avatars domain (def. <code>https://a.osunolimits.dev</code>) \u2705 Setting Description Required <code>DOWNLOAD_MARKETPLACE_PLUGIN</code> Offers a plugin marketplace (def. <code>true</code>) \u274c <code>APIURL</code> Local API Host (Should stay default) \u274c <code>AVATARFOLDER</code> Avatar folder only needs change when installed not like wiki \u274c"},{"location":"installation/#build-and-start_1","title":"Build and Start","text":"<p>With everything configured, build and start the project:</p> <pre><code># Build shiina\nmake build\n\n# Start the frontend\nmake run\n</code></pre> <p>Development vs Production</p> <ul> <li>For development: Use <code>make run-dev</code> for easier debugging and hot reloading</li> <li>For production: Consider using <code>screen -S shiina make run</code> to run in background</li> </ul>"},{"location":"installation/#frequently-asked-questions","title":"Frequently Asked Questions","text":"<p>Here you'll find answers to the most common questions.</p>"},{"location":"installation/#installation","title":"Installation","text":"How can I use local machine MySQL and Redis? <p>To use local MySQL and Redis you can create a <code>docker-compose.override.yml</code> <pre><code>cd /home/bancho.py-ex\nnano docker-compose.override.yml\n</code></pre></p> <p>File Content: <pre><code>services:\n    bancho:\n        depends_on: []\n        network_mode: host\n        volumes:\n        - /home/bancho.py-ex/.data:/srv/root\n        - .:/srv/root\n        - data:/srv/root/.data\n        environment:\n        - DB_HOST=127.0.0.1\n        - REDIS_HOST=127.0.0.1\n\n    mysql:\n        deploy:\n        replicas: 0\n\n    redis:\n        deploy:\n        replicas: 0\n</code></pre> Now your bancho will use your machines mysql and redis</p> <p>No worries the <code>docker-compose.override.yml</code> is in .gitignore</p> Why are my assets/avatars not showing up? <p>Fix for Avatar Server (a.your.domain) Returning 404</p> <p>If <code>/var/log/nginx/error.log</code> reports permission denied, run:</p> <pre><code>chown www-data:www-data /var/lib/docker/volumes/banchopy-ex_data/_data\nchown www-data:www-data /home/bancho.py-ex/.data\nchmod +x /var/lib/docker/volumes/banchopy-ex_data\nchmod +x /var/lib/docker/volumes\nchmod +x /var/lib/docker\n</code></pre> <p>What this does: - Gives www-data (the Nginx user) ownership of the <code>_data</code> folder, which is stored inside a Docker volume. - Allows all users on your machine to browse the bancho.py Docker volume. - Allows all users on your machine to browse the Docker volumes folder. - Allows all users on your machine to browse the Docker folder. - (does not include sub-folders) </p> <p>Note: If you use Caddy instead of Nginx, replace all occurrences of <code>www-data</code> with <code>caddy</code>.</p> How can I recieve Donations on shiina? <p>The only provider supported is kofi <pre><code>nano /home/Shiina-Web/data/monetization.json\n# Set enabled to `true`\n# Restart shiina\nnano /home/Shiina-Web/data/monetization/kofi.json\n</code></pre></p> <p>https://ko-fi.com/manage/webhooks?src=sidemenu</p> <p>Enter <code>https://yourdomain.dev/handlekofi</code></p> <p>On Advanced you can get your verification token</p> <p>File Content <pre><code>{\n    \"verificationToken\": \"your-access-token\",\n    \"pageName\": \"osunolimits\",\n    \"donationAmount\": 1\n}\n</code></pre> <code>donationAmount</code> is the amount of your currency to pay</p> <p>If someones buys for 10$ it would equal to 10 months</p>"},{"location":"installation/#usage","title":"Usage","text":"Why is my rank graph not showing? <p>It needs at least a week of data to show</p> Can I change code? <p>Yes but it isn't recommended, it can cause issues updating. Use plugins/themes if possible</p>"},{"location":"installation/#troubleshooting","title":"Troubleshooting","text":"Can I see frontend logs? <p>Shiina keeps logs for 30days and rotates them <pre><code>cd /home/Shiina-Web/logs\n</code></pre></p> How can I recalc PP? <p>For recalc you need to open a shell in the docker container <pre><code>docker ps\n# Pick the container id that runs bancho\ndocker exec -it yourid sh\n# now go into tools\ncd tools/\npython recalc.py\n</code></pre></p> How clear frontend sessions/cache? <pre><code>apt install redis-tools # or for your system\nredis-cli\n# now you are in redis terminal\nEVAL \"for _,k in ipairs(redis.call('KEYS', 'shiina:*')) do redis.call('DEL', k) end\" 0\n# Now you need to restart shiina to initialize some keys\n</code></pre>"},{"location":"plugins/","title":"Extending shiina","text":""},{"location":"theming/","title":"Theming Shiina","text":"<p>Create stunning custom themes for your Shiina-Web frontend! This guide walks you through the complete theming system, from basic setup to advanced customization.</p> <p>What You'll Learn</p> <ul> <li> How to structure theme directories</li> <li> Creating theme metadata and configuration</li> <li> Writing custom CSS for beautiful themes  </li> <li> Understanding the Halfmoon CSS framework</li> <li> Advanced customization techniques</li> </ul>"},{"location":"theming/#quick-start","title":"Quick Start","text":"<p>Prerequisites</p> <ul> <li>Basic knowledge of CSS and CSS variables</li> <li>A running Shiina-Web installation</li> <li>Text editor for code editing</li> </ul>"},{"location":"theming/#theme-directory-structure","title":"Theme Directory Structure","text":"<p>All themes are organized in the <code>themes/</code> directory with the following structure:</p> <pre><code>themes/\n\u251c\u2500\u2500 your-theme-name/\n\u2502   \u251c\u2500\u2500 theme.yml          # Theme metadata\n\u2502   \u2514\u2500\u2500 style.css          # Theme styles\n\u2514\u2500\u2500 other-themes/\n    \u2514\u2500\u2500 ...\n</code></pre>"},{"location":"theming/#creating-a-new-theme","title":"Creating a New Theme","text":"<p>Follow these steps to create your custom theme:</p>"},{"location":"theming/#step-1-create-theme-directory","title":"Step 1: Create Theme Directory","text":"<p>Create a new directory inside the <code>themes/</code> folder with your theme name in lowercase:</p> <p>Directory Example</p> <pre><code>mkdir themes/your-theme-name\n</code></pre> <p>Replace <code>your-theme-name</code> with your desired theme name (e.g., <code>midnight</code>, <code>neon</code>, <code>retro</code>)</p>"},{"location":"theming/#step-2-define-theme-metadata","title":"Step 2: Define Theme Metadata","text":"<p>Create a <code>theme.yml</code> file inside your theme directory:</p>  theme.yml Field Descriptions <pre><code>name: your-theme-name\nfullname: OsuNoLimits Modern\nauthor: halfmoon.css &amp; osuNoLimits\nincluded: false\nscreenshot: https://assets.osunolimits.dev/shiina/your-theme-name.png\n</code></pre> Field Description Required <code>name</code> Unique theme identifier (lowercase) \u2705 <code>fullname</code> Display name for the theme \u2705 <code>author</code> Theme creator(s) \u2705 <code>included</code> Whether theme is bundled (set to <code>false</code>) \u2705 <code>screenshot</code> Preview image URL \u274c <p>Important Notes</p> <ul> <li>The <code>name</code> field must match your directory name exactly</li> <li>Always set <code>included: false</code> for custom themes</li> <li>Use descriptive <code>fullname</code> for better user experience</li> </ul>"},{"location":"theming/#step-3-create-the-style-file","title":"Step 3: Create the Style File","text":"<p>Create a <code>style.css</code> file with your theme styles. Here's the complete Halfmoon CSS template:</p>  Base Template <pre><code>/*!\n * ----------------------------------------------------------------------------\n * Halfmoon CSS - Modern theme\n * Copyright (c) 2023, Tahmid Khan | MIT License | https://www.gethalfmoon.com\n * ----------------------------------------------------------------------------\n * The above notice must be included in its entirety when this file is used.\n */\n[data-bs-core=your-theme-name] {\n    /* Gray */\n    --bs-slate-hue: 216;\n    --bs-slate-saturation: 20%;\n\n    /* Light gray */\n    --bs-lightgray-hue: var(--bs-slate-hue);\n    --bs-lightgray-saturation: var(--bs-slate-saturation);\n\n    /* Sable (almost black) */\n    --bs-sable-hue: var(--bs-darkgray-hue);\n    --bs-sable-saturation: var(--bs-darkgray-saturation);\n    --bs-sable-100-hsl: var(--bs-sable-hue), var(--bs-sable-saturation), 31%;\n    --bs-sable-200-hsl: var(--bs-sable-hue), var(--bs-sable-saturation), 29%;\n    --bs-sable-300-hsl: var(--bs-sable-hue), var(--bs-sable-saturation), 27%;\n    --bs-sable-400-hsl: var(--bs-sable-hue), var(--bs-sable-saturation), 25%;\n    --bs-sable-500-hsl: var(--bs-sable-hue), var(--bs-sable-saturation), 23%;\n    --bs-sable-600-hsl: var(--bs-sable-hue), var(--bs-sable-saturation), 21%;\n    --bs-sable-700-hsl: var(--bs-sable-hue), var(--bs-sable-saturation), 19%;\n    --bs-sable-800-hsl: var(--bs-sable-hue), var(--bs-sable-saturation), 17%;\n    --bs-sable-900-hsl: var(--bs-sable-hue), var(--bs-sable-saturation), 15%;\n    --bs-sable-100: hsl(var(--bs-sable-100-hsl));\n    --bs-sable-200: hsl(var(--bs-sable-200-hsl));\n    --bs-sable-300: hsl(var(--bs-sable-300-hsl));\n    --bs-sable-400: hsl(var(--bs-sable-400-hsl));\n    --bs-sable-500: hsl(var(--bs-sable-500-hsl));\n    --bs-sable-600: hsl(var(--bs-sable-600-hsl));\n    --bs-sable-700: hsl(var(--bs-sable-700-hsl));\n    --bs-sable-800: hsl(var(--bs-sable-800-hsl));\n    --bs-sable-900: hsl(var(--bs-sable-900-hsl));\n    --bs-sable-hsl: var(--bs-sable-500-hsl);\n    --bs-sable: hsl(var(--bs-sable-hsl));\n    --bs-sable-foreground-hsl: var(--bs-white-hsl);\n    --bs-sable-foreground: hsl(var(--bs-sable-foreground-hsl));\n    --bs-sable-text-emphasis-hsl: var(--bs-sable-600-hsl);\n    --bs-sable-text-emphasis: hsl(var(--bs-sable-text-emphasis-hsl));\n    --bs-sable-hover-bg: var(--bs-sable-600);\n    --bs-sable-active-bg: var(--bs-sable-700);\n    --bs-sable-bg-subtle: hsl(var(--bs-sable-hue), var(--bs-sable-saturation), 70%);\n    --bs-sable-border-subtle: var(--bs-sable-400);\n    --bs-sable-checkbox-svg: var(--bs-checkbox-svg-light);\n    --bs-sable-dash-svg: var(--bs-dash-svg-light);\n    --bs-sable-radio-svg: var(--bs-radio-svg-light);\n    --bs-sable-switch-svg: var(--bs-switch-svg-light);\n\n    /* Primary */\n    --bs-primary-hue: var(--bs-navy-hue);\n    --bs-primary-saturation: var(--bs-navy-saturation);\n    --bs-primary-100-hsl: var(--bs-navy-100-hsl);\n    --bs-primary-200-hsl: var(--bs-navy-200-hsl);\n    --bs-primary-300-hsl: var(--bs-navy-300-hsl);\n    --bs-primary-400-hsl: var(--bs-navy-400-hsl);\n    --bs-primary-500-hsl: var(--bs-navy-500-hsl);\n    --bs-primary-600-hsl: var(--bs-navy-600-hsl);\n    --bs-primary-700-hsl: var(--bs-navy-700-hsl);\n    --bs-primary-800-hsl: var(--bs-navy-800-hsl);\n    --bs-primary-900-hsl: var(--bs-navy-900-hsl);\n    --bs-primary-100: var(--bs-navy-100);\n    --bs-primary-200: var(--bs-navy-200);\n    --bs-primary-300: var(--bs-navy-300);\n    --bs-primary-400: var(--bs-navy-400);\n    --bs-primary-500: var(--bs-navy-500);\n    --bs-primary-600: var(--bs-navy-600);\n    --bs-primary-700: var(--bs-navy-700);\n    --bs-primary-800: var(--bs-navy-800);\n    --bs-primary-900: var(--bs-navy-900);\n    --bs-primary-hsl: var(--bs-navy-hsl);\n    --bs-primary: var(--bs-navy);\n    --bs-primary-foreground-hsl: var(--bs-navy-foreground-hsl);\n    --bs-primary-foreground: var(--bs-navy-foreground);\n    --bs-primary-text-emphasis-hsl: var(--bs-navy-text-emphasis-hsl);\n    --bs-primary-text-emphasis: var(--bs-navy-text-emphasis);\n    --bs-primary-hover-bg: var(--bs-navy-hover-bg);\n    --bs-primary-active-bg: var(--bs-navy-active-bg);\n    --bs-primary-bg-subtle: var(--bs-navy-bg-subtle);\n    --bs-primary-border-subtle: var(--bs-navy-border-subtle);\n    --bs-primary-checkbox-svg: var(--bs-navy-checkbox-svg);\n    --bs-primary-dash-svg: var(--bs-navy-dash-svg);\n    --bs-primary-radio-svg: var(--bs-navy-radio-svg);\n    --bs-primary-switch-svg: var(--bs-navy-switch-svg);\n\n    /* Info */\n    --bs-info-hue: var(--bs-blue-hue);\n    --bs-info-saturation: var(--bs-blue-saturation);\n    --bs-info-100-hsl: var(--bs-blue-100-hsl);\n    --bs-info-200-hsl: var(--bs-blue-200-hsl);\n    --bs-info-300-hsl: var(--bs-blue-300-hsl);\n    --bs-info-400-hsl: var(--bs-blue-400-hsl);\n    --bs-info-500-hsl: var(--bs-blue-500-hsl);\n    --bs-info-600-hsl: var(--bs-blue-600-hsl);\n    --bs-info-700-hsl: var(--bs-blue-700-hsl);\n    --bs-info-800-hsl: var(--bs-blue-800-hsl);\n    --bs-info-900-hsl: var(--bs-blue-900-hsl);\n    --bs-info-100: var(--bs-blue-100);\n    --bs-info-200: var(--bs-blue-200);\n    --bs-info-300: var(--bs-blue-300);\n    --bs-info-400: var(--bs-blue-400);\n    --bs-info-500: var(--bs-blue-500);\n    --bs-info-600: var(--bs-blue-600);\n    --bs-info-700: var(--bs-blue-700);\n    --bs-info-800: var(--bs-blue-800);\n    --bs-info-900: var(--bs-blue-900);\n    --bs-info-hsl: var(--bs-blue-hsl);\n    --bs-info: var(--bs-blue);\n    --bs-info-foreground-hsl: var(--bs-blue-foreground-hsl);\n    --bs-info-foreground: var(--bs-blue-foreground);\n    --bs-info-text-emphasis-hsl: var(--bs-blue-text-emphasis-hsl);\n    --bs-info-text-emphasis: var(--bs-blue-text-emphasis);\n    --bs-info-hover-bg: var(--bs-blue-hover-bg);\n    --bs-info-active-bg: var(--bs-blue-active-bg);\n    --bs-info-bg-subtle: var(--bs-blue-bg-subtle);\n    --bs-info-border-subtle: var(--bs-blue-border-subtle);\n    --bs-info-checkbox-svg: var(--bs-blue-checkbox-svg);\n    --bs-info-dash-svg: var(--bs-blue-dash-svg);\n    --bs-info-radio-svg: var(--bs-blue-radio-svg);\n    --bs-info-switch-svg: var(--bs-blue-switch-svg);\n}\n[data-bs-core=your-theme-name][data-bs-theme=dark] {\n    /* Dark gray */\n    --bs-darkgray-text-emphasis-hsl: var(--bs-darkgray-200-hsl);\n    --bs-darkgray-text-emphasis: hsl(var(--bs-darkgray-text-emphasis-hsl));\n\n    /* Sable (black) */\n    --bs-sable-text-emphasis-hsl: var(--bs-sable-400-hsl);\n    --bs-sable-text-emphasis: hsl(var(--bs-sable-text-emphasis-hsl));\n    --bs-sable-bg-subtle: hsl(var(--bs-sable-hue), var(--bs-sable-saturation), 14%);\n    --bs-sable-border-subtle: var(--bs-sable-600);\n\n    /* Blue */\n    --bs-blue-text-emphasis-hsl: var(--bs-blue-300-hsl);\n    --bs-blue-text-emphasis: hsl(var(--bs-blue-text-emphasis-hsl));\n\n    /* Primary */\n    --bs-primary-hue: var(--bs-sky-hue);\n    --bs-primary-saturation: var(--bs-sky-saturation);\n    --bs-primary-100-hsl: var(--bs-sky-100-hsl);\n    --bs-primary-200-hsl: var(--bs-sky-200-hsl);\n    --bs-primary-300-hsl: var(--bs-sky-300-hsl);\n    --bs-primary-400-hsl: var(--bs-sky-400-hsl);\n    --bs-primary-500-hsl: var(--bs-sky-500-hsl);\n    --bs-primary-600-hsl: var(--bs-sky-600-hsl);\n    --bs-primary-700-hsl: var(--bs-sky-700-hsl);\n    --bs-primary-800-hsl: var(--bs-sky-800-hsl);\n    --bs-primary-900-hsl: var(--bs-sky-900-hsl);\n    --bs-primary-100: var(--bs-sky-100);\n    --bs-primary-200: var(--bs-sky-200);\n    --bs-primary-300: var(--bs-sky-300);\n    --bs-primary-400: var(--bs-sky-400);\n    --bs-primary-500: var(--bs-sky-500);\n    --bs-primary-600: var(--bs-sky-600);\n    --bs-primary-700: var(--bs-sky-700);\n    --bs-primary-800: var(--bs-sky-800);\n    --bs-primary-900: var(--bs-sky-900);\n    --bs-primary-hsl: var(--bs-sky-hsl);\n    --bs-primary: var(--bs-sky);\n    --bs-primary-foreground-hsl: var(--bs-sky-foreground-hsl);\n    --bs-primary-foreground: var(--bs-sky-foreground);\n    --bs-primary-text-emphasis-hsl: var(--bs-sky-text-emphasis-hsl);\n    --bs-primary-text-emphasis: var(--bs-sky-text-emphasis);\n    --bs-primary-hover-bg: var(--bs-sky-hover-bg);\n    --bs-primary-active-bg: var(--bs-sky-active-bg);\n    --bs-primary-bg-subtle: var(--bs-sky-bg-subtle);\n    --bs-primary-border-subtle: var(--bs-sky-border-subtle);\n    --bs-primary-checkbox-svg: var(--bs-sky-checkbox-svg);\n    --bs-primary-dash-svg: var(--bs-sky-dash-svg);\n    --bs-primary-radio-svg: var(--bs-sky-radio-svg);\n    --bs-primary-switch-svg: var(--bs-sky-switch-svg);\n\n    /* Info */\n    --bs-info-text-emphasis-hsl: var(--bs-blue-text-emphasis-hsl);\n    --bs-info-text-emphasis: var(--bs-blue-text-emphasis);\n    --bs-info-bg-subtle: var(--bs-blue-bg-subtle);\n    --bs-info-border-subtle: var(--bs-blue-border-subtle);\n}\n/* Variables */\n[data-bs-core=your-theme-name] {\n    /* Link */\n    --bs-link-color-hsl: var(--bs-info-text-emphasis-hsl);\n    --bs-link-hover-color-hsl: var(--bs-info-hsl);\n\n    /* Content (used as needed in cards, panels, menus, etc.) */\n    --bs-content-bg-hsl: var(--bs-body-bg-hsl);\n    --bs-content-border-color: var(--bs-border-color);\n\n    /* Form */\n    --bs-form-focus-border-color: var(--bs-info-border-subtle);\n    --bs-form-focus-shadow-hsl: var(--bs-info-hsl);\n    --bs-form-check-focus-border-color: var(--bs-info-border-subtle);\n}\n\n[data-bs-core=your-theme-name]:not([data-bs-theme=dark]) {\n    /* Background */\n    --bs-body-bg-hsl: var(--bs-white-hsl);\n    --bs-secondary-bg-hsl: var(--bs-lightgray-hue), var(--bs-lightgray-saturation), 98.75%;\n    --bs-tertiary-bg-hsl: var(--bs-lightgray-hue), var(--bs-lightgray-saturation), 97.5%;\n\n    /* Border */\n    --bs-border-color: var(--bs-lightgray-700);\n    --bs-border-color-light: var(--bs-lightgray-500);\n}\n\n[data-bs-core=your-theme-name][data-bs-theme=dark] {\n    /* Background */\n    --bs-body-bg-hsl: var(--bs-sable-900-hsl);\n    --bs-secondary-bg-hsl: var(--bs-sable-800-hsl);\n    --bs-tertiary-bg-hsl: var(--bs-sable-700-hsl);\n\n    /* Border */\n    --bs-border-color: var(--bs-gray-900);\n\n    /* Content (used as needed in cards, panels, menus, etc.) */\n    --bs-content-floating-bg-hsl: var(--bs-sable-hue), var(--bs-sable-saturation), 16.5%;\n\n    /* Action (used as needed in buttons, inputs, menu items, page links, etc.) */\n    --bs-action-border-color: var(--bs-border-color);\n\n    /* Contextual buttons */\n    --bs-ctx-btn-border-color: transparent;\n    --bs-ctx-btn-bg-clip: border-box;\n\n    /* Action bar (used as needed in range, progress, etc.) */\n    --bs-actionbar-border-color: hsla(var(--bs-white-hsl), 0.075);\n    --bs-progresstrack-border-width: 0;\n    --bs-progresstrack-box-shadow: inset 0 0 0 var(--bs-border-width) var(--bs-actionbar-border-color);\n    --bs-progresstrack-bg-clip: border-box;\n}\n\n/* Sidebar */\n[data-bs-core=your-theme-name] .sidebar {\n    --bs-sidebar-item-padding-x: 1rem;\n    --bs-sidebar-item-padding-y: 0.25rem;\n    --bs-sidebar-header-font-weight: var(--bs-font-weight-bold);\n    --bs-sidebar-divider-bg: var(--bs-sidebar-bg);\n}\n\n[data-bs-core=your-theme-name] .sidebar-nav .nav-link {\n    border-left: var(--bs-border-width) solid var(--bs-border-color-light);\n}\n\n[data-bs-core=your-theme-name] .sidebar-nav .nav-link.active,\n[data-bs-core=your-theme-name] .sidebar-nav .nav-link.show {\n    font-weight: var(--bs-font-weight-bold);\n    border-color: currentColor;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n</code></pre>"},{"location":"theming/#advanced-customization","title":"Advanced Customization","text":""},{"location":"theming/#custom-element-styling","title":"Custom Element Styling","text":"<p>Target specific Shiina components by replacing <code>your-theme-name</code> with your theme name:</p> <p>Search Input Styling</p> <pre><code>[data-bs-core=your-theme-name] .shiina-search-input {\n    padding: 10px;\n    border-radius: 8px;\n    background: var(--bs-secondary-bg);\n    border: 2px solid var(--bs-primary);\n    transition: all 0.3s ease;\n}\n\n[data-bs-core=your-theme-name] .shiina-search-input:focus {\n    box-shadow: 0 0 15px var(--bs-primary);\n    transform: scale(1.02);\n}\n</code></pre>"},{"location":"theming/#color-scheme-examples","title":"Color Scheme Examples","text":"Dark Cyberpunk Light Pastel Nature Theme <pre><code>[data-bs-core=cyberpunk] {\n    --bs-primary-hue: 300;\n    --bs-primary-saturation: 80%;\n    --bs-info-hue: 180;\n    --bs-info-saturation: 90%;\n    --bs-body-bg-hsl: 230, 25%, 8%;\n}\n</code></pre> <pre><code>[data-bs-core=pastel] {\n    --bs-primary-hue: 320;\n    --bs-primary-saturation: 45%;\n    --bs-info-hue: 200;\n    --bs-info-saturation: 60%;\n    --bs-body-bg-hsl: 45, 85%, 97%;\n}\n</code></pre> <pre><code>[data-bs-core=nature] {\n    --bs-primary-hue: 120;\n    --bs-primary-saturation: 65%;\n    --bs-info-hue: 60;\n    --bs-info-saturation: 75%;\n    --bs-body-bg-hsl: 90, 20%, 96%;\n}\n</code></pre>"},{"location":"theming/#best-practices","title":"Best Practices","text":"<p>Theme Development Tips</p> <ul> <li> Test both light and dark modes - Ensure your theme works well in both themes</li> <li> Consider mobile responsiveness - Test on different screen sizes</li> <li> Maintain accessibility - Ensure proper color contrast ratios</li> <li> Optimize performance - Avoid unnecessary CSS rules and complex selectors</li> </ul> <p>CSS Variable Guidelines</p> <ul> <li>Use HSL values for better color manipulation</li> <li>Leverage existing Halfmoon variables when possible</li> <li>Keep color palettes consistent across components</li> <li>Document your custom variables for maintenance</li> </ul>"},{"location":"theming/#theme-validation","title":"Theme Validation","text":"<p>Before publishing your theme, verify:</p> <ul> <li> <code>theme.yml</code> contains all required fields</li> <li> CSS selectors use your theme name correctly</li> <li> Dark mode variants are included</li> <li> Theme displays correctly in Shiina admin panel</li> <li> All interactive elements are properly styled</li> </ul>"},{"location":"theming/#publishing-your-theme","title":"Publishing Your Theme","text":"<p>Once your theme is complete:</p> <ol> <li>Test thoroughly in your Shiina installation</li> <li>Create documentation for any special features</li> <li>Share with the community via GitHub or Discord</li> <li>Consider submitting to the official theme collection</li> </ol> <p>Congratulations!</p> <p>You've successfully created a custom Shiina theme! Your users will now be able to enjoy a personalized experience with your unique design.</p>"},{"location":"theming/#faq","title":"FAQ","text":"Can I modify existing themes? <p>Yes! You can use any existing theme as a starting point. Just copy the theme directory, rename it, and modify the files as needed. This doesn't apply to marketplace themes</p> How do I debug theme issues? <p>Use your browser's developer tools to inspect CSS variables and see which rules are being applied. The theme name in CSS selectors must match exactly.</p> Are there any performance considerations? <p>Keep CSS rules efficient and avoid deeply nested selectors. The Halfmoon framework is already optimized, so building on top of it ensures good performance.</p> Can themes modify JavaScript functionality? <p>Themes are CSS-only. For JavaScript modifications, you'll need to use the plugin system instead.</p>"}]}